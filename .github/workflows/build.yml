name: build

on:
  push:
    branches: [ main ]
    tags: [ "*" ]
    paths-ignore: [ "README.md", "history.md", "release-notes.md" ]

  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and/or Test
    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ ubuntu-latest, windows-latest, macos-latest ]
        lazarus-versions: [ stable, 2.0.12, 2.0.10 ]

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        clean: true
        submodules: true
        set-safe-directory: true

    - name: Install Lazarus
      uses: gcarreno/setup-lazarus@v3.2
      with:
        lazarus-version: ${{ matrix.lazarus-versions }}
        with-cache: false

    - name: Build the Main App (Windows)
      if: ${{ matrix.operating-system == 'windows-latest' }}
      run: |
        lazbuild -B --bm=Release "src/nosodatatool.lpi"
        mv bin/nosodatatool.exe bin/nosodatatool-x86_64-win64.exe

    - name: Build the Main App (Ubuntu)
      if: ${{ matrix.operating-system == 'ubuntu-latest' }}
      run: |
        lazbuild -B --bm=Release "src/nosodatatool.lpi"
        mv bin/nosodatatool bin/nosodatatool-x86_64-linux

    - name: Build the Main App (macOS)
      if: ${{ matrix.operating-system == 'macos-latest' }}
      run: |
        lazbuild -B --bm=Release "src/nosodatatool.lpi"
        mv bin/nosodatatool bin/nosodatatool-x86_64-darwin

    - name: Upload binary (Windows)
      if: ${{ (matrix.operating-system == 'windows-latest')  &&  (matrix.lazarus-versions == 'stable') }}
      uses: actions/upload-artifact@v2
      with:
        name: nosodatatool
        path: bin/nosodatatool-x86_64-win64.exe

    - name: Upload binary (Ubuntu)
      if: ${{ (matrix.operating-system == 'ubuntu-latest')  &&  (matrix.lazarus-versions == 'stable') }}
      uses: actions/upload-artifact@v2
      with:
        name: nosodatatool
        path: bin/nosodatatool-x86_64-linux

    - name: Upload binary (macOS)
      if: ${{ (matrix.operating-system == 'macos-latest')  &&  (matrix.lazarus-versions == 'stable') }}
      uses: actions/upload-artifact@v2
      with:
        name: nosodatatool
        path: bin/nosodatatool-x86_64-darwin

  package-release:
    if: contains(github.ref, '/tags/')

    name: Package and create GitHub Release
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set output
      id: vars
      run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

    - name: Download the Release binary
      uses: actions/download-artifact@v2

    - name: List files
      run: ls -alF

    - name: Create release files
      run: |
        cd nosodatatool
        chmod +x nosodatatool-x86_64-linux nosodatatool-x86_64-darwin
        zip -r nosodatatool-${{ steps.vars.outputs.tag }}-x86_64-win64.zip nosodatatool-x86_64-win64.exe
        tar -zcvf nosodatatool-${{ steps.vars.outputs.tag }}-x86_64-linux.tar.gz nosodatatool-x86_64-linux
        tar -zcvf nosodatatool-${{ steps.vars.outputs.tag }}-x86_64-darwin.tar.gz nosodatatool-x86_64-darwin

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        name: nosodatatool ${{ steps.vars.outputs.tag }}
        body_path: release-notes.md
        files: |
          nosodatatool/*.tar.gz
          nosodatatool/*.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
